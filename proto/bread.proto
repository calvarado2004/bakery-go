syntax = "proto3";

package  bread;


import "googleapis/google/api/annotations.proto";


option go_package = "github.com/calvarado2004/bakery-go/bread";

service BakeryManagement {
    rpc AddClientToQueue(ClientsInQueue) returns (ClientsInQueue) {}
    rpc GetBread(BreadRequest) returns (BreadResponse) {}
    rpc GetCakes(CakesRequest) returns (CakesResponse) {}
    rpc GetCookies(CookiesRequest) returns (CookiesResponse) {}
    rpc GetBreadList(BreadList) returns (BreadList) {}
    rpc GetCakesList(BreadList) returns (BreadList) {}
    rpc GetCookiesList(BreadList) returns (BreadList) {}
    rpc ShowWaitingQueue(ClientsInQueue) returns (ClientsInQueue) {}
    rpc DeleteClientFromQueue(ClientsInQueue) returns (ClientsInQueue) {}
}

service MakeBread {
    rpc MakeBread(BreadRequest)
    returns (BreadResponse) {
        option (google.api.http) = {
            post: "/v1/bread"
            body: "*"
        };
    }
}

service MakeCakes {
    rpc MakeCakes(CakesRequest) returns (CakesResponse) {
        option (google.api.http) = {
            post: "/v1/cakes"
            body: "*"
        };
    }
}

service MakeCookies {
    rpc MakeCookies(CookiesRequest) returns (CookiesResponse) {
        option (google.api.http) = {
            post: "/v1/cookies"
            body: "*"
        };
    }
}

service RequestBread {
    rpc GetBread(BreadRequest) returns (BreadResponse) {
        option (google.api.http) = {
            get: "/v1/bread/{name}"
        };
    }
}

service AddClientToQueue {
  rpc AddClient(ClientsInQueue) returns (ClientsInQueue) {
    option (google.api.http) = {
      post: "/v1/queue"
      body: "*"
    };
  }
}

service GetBreadList {
  rpc GetBreadList(BreadList) returns (BreadList) {
    option (google.api.http) = {
      get: "/v1/bread"
    };
  }
}

service DeleteClientFromQueue {
  rpc DeleteClient(ClientsInQueue) returns (ClientsInQueue) {
    option (google.api.http) = {
      delete: "/v1/queue"
      body: "*"
    };
  }
}

service ShowWaitingQueue {
  rpc ShowQueue(ClientsInQueue) returns (ClientsInQueue) {
    option (google.api.http) = {
      get: "/v1/queue"
    };
  }
}

message BreadRequest {
    string name = 1;
    string type = 2;
    int64 quantity = 3;
    string message = 4;
}

message BreadResponse {
    string name = 1;
    string type = 2;
    int64 quantity = 3;
    int64 price = 4;
    string message = 5;
    string error = 6;
}

message CakesRequest {
    string name = 1;
    string type = 2;
    int64 quantity = 3;
    string message = 4;
}

message CakesResponse {
    string name = 1;
    string type = 2;
    int64 quantity = 3;
    int64 price = 4;
    string message = 5;
    string error = 6;
}

message CookiesRequest {
    string name = 1;
    string type = 2;
    int64 quantity = 3;
    string message = 4;
}

message CookiesResponse {
    string name = 1;
    string type = 2;
    int64 quantity = 3;
    int64 price = 4;
    string message = 5;
    string error = 6;
}

message ClientsInQueue {
    int64 clients = 1;
}


message Bread {
    string name = 1;
    string type = 2;
    int64 quantity = 3;
    int64 price = 4;
    string message = 5;
    string error = 6;
}

message Cakes {
    string name = 1;
    string type = 2;
    int64 quantity = 3;
    int64 price = 4;
    string message = 5;
    string error = 6;
}

message Cookies {
    string name = 1;
    string type = 2;
    int64 quantity = 3;
    int64 price = 4;
    string message = 5;
    string error = 6;
}

message BreadList {
    repeated Bread breads = 1;
    repeated Cakes cakes = 2;
    repeated Cookies cookies = 3;

}

message BakeryRequestList {
    repeated BreadRequest breads = 1;

}

message BakeryResponseList {
    repeated BreadResponse breads = 1;
}


message CakesRequestList {
    repeated CakesRequest cakes = 1;

}

message CakesResponseList {
    repeated CakesResponse cakes = 1;
}

message CookiesRequestList {
    repeated CookiesRequest cookies = 1;

}

message CookiesResponseList {
    repeated CookiesResponse cookies = 1;
}
