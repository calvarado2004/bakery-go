// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.3
// source: proto/bread.proto

package bread

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Bread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price       float32 `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	Quantity    int32   `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Description string  `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Type        string  `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	Status      string  `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt   string  `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt   string  `protobuf:"bytes,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Image       string  `protobuf:"bytes,10,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *Bread) Reset() {
	*x = Bread{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bread_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bread) ProtoMessage() {}

func (x *Bread) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bread_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bread.ProtoReflect.Descriptor instead.
func (*Bread) Descriptor() ([]byte, []int) {
	return file_proto_bread_proto_rawDescGZIP(), []int{0}
}

func (x *Bread) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Bread) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Bread) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Bread) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Bread) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Bread) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Bread) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Bread) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Bread) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Bread) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type BuyOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CustomerId int32 `protobuf:"varint,2,opt,name=customerId,proto3" json:"customerId,omitempty"`
}

func (x *BuyOrder) Reset() {
	*x = BuyOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bread_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyOrder) ProtoMessage() {}

func (x *BuyOrder) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bread_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyOrder.ProtoReflect.Descriptor instead.
func (*BuyOrder) Descriptor() ([]byte, []int) {
	return file_proto_bread_proto_rawDescGZIP(), []int{1}
}

func (x *BuyOrder) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BuyOrder) GetCustomerId() int32 {
	if x != nil {
		return x.CustomerId
	}
	return 0
}

type BuyOrderDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuyOrderId int32   `protobuf:"varint,1,opt,name=buyOrderId,proto3" json:"buyOrderId,omitempty"`
	BreadId    int32   `protobuf:"varint,2,opt,name=breadId,proto3" json:"breadId,omitempty"`
	Quantity   int32   `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price      float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
	Status     string  `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *BuyOrderDetails) Reset() {
	*x = BuyOrderDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bread_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyOrderDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyOrderDetails) ProtoMessage() {}

func (x *BuyOrderDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bread_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyOrderDetails.ProtoReflect.Descriptor instead.
func (*BuyOrderDetails) Descriptor() ([]byte, []int) {
	return file_proto_bread_proto_rawDescGZIP(), []int{2}
}

func (x *BuyOrderDetails) GetBuyOrderId() int32 {
	if x != nil {
		return x.BuyOrderId
	}
	return 0
}

func (x *BuyOrderDetails) GetBreadId() int32 {
	if x != nil {
		return x.BreadId
	}
	return 0
}

func (x *BuyOrderDetails) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *BuyOrderDetails) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *BuyOrderDetails) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type BuyOrderList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuyOrders []*BuyOrder `protobuf:"bytes,1,rep,name=buyOrders,proto3" json:"buyOrders,omitempty"`
}

func (x *BuyOrderList) Reset() {
	*x = BuyOrderList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bread_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyOrderList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyOrderList) ProtoMessage() {}

func (x *BuyOrderList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bread_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyOrderList.ProtoReflect.Descriptor instead.
func (*BuyOrderList) Descriptor() ([]byte, []int) {
	return file_proto_bread_proto_rawDescGZIP(), []int{3}
}

func (x *BuyOrderList) GetBuyOrders() []*BuyOrder {
	if x != nil {
		return x.BuyOrders
	}
	return nil
}

type MakeOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BreadMakerId int32 `protobuf:"varint,2,opt,name=breadMakerId,proto3" json:"breadMakerId,omitempty"`
}

func (x *MakeOrder) Reset() {
	*x = MakeOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bread_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeOrder) ProtoMessage() {}

func (x *MakeOrder) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bread_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeOrder.ProtoReflect.Descriptor instead.
func (*MakeOrder) Descriptor() ([]byte, []int) {
	return file_proto_bread_proto_rawDescGZIP(), []int{4}
}

func (x *MakeOrder) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MakeOrder) GetBreadMakerId() int32 {
	if x != nil {
		return x.BreadMakerId
	}
	return 0
}

type MakeOrderDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MakeOrderId int32   `protobuf:"varint,1,opt,name=makeOrderId,proto3" json:"makeOrderId,omitempty"`
	BreadId     int32   `protobuf:"varint,2,opt,name=breadId,proto3" json:"breadId,omitempty"`
	Quantity    int32   `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price       float32 `protobuf:"fixed32,4,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *MakeOrderDetails) Reset() {
	*x = MakeOrderDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bread_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakeOrderDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeOrderDetails) ProtoMessage() {}

func (x *MakeOrderDetails) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bread_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeOrderDetails.ProtoReflect.Descriptor instead.
func (*MakeOrderDetails) Descriptor() ([]byte, []int) {
	return file_proto_bread_proto_rawDescGZIP(), []int{5}
}

func (x *MakeOrderDetails) GetMakeOrderId() int32 {
	if x != nil {
		return x.MakeOrderId
	}
	return 0
}

func (x *MakeOrderDetails) GetBreadId() int32 {
	if x != nil {
		return x.BreadId
	}
	return 0
}

func (x *MakeOrderDetails) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *MakeOrderDetails) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type BreadList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Breads []*Bread `protobuf:"bytes,1,rep,name=breads,proto3" json:"breads,omitempty"`
}

func (x *BreadList) Reset() {
	*x = BreadList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bread_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreadList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreadList) ProtoMessage() {}

func (x *BreadList) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bread_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreadList.ProtoReflect.Descriptor instead.
func (*BreadList) Descriptor() ([]byte, []int) {
	return file_proto_bread_proto_rawDescGZIP(), []int{6}
}

func (x *BreadList) GetBreads() []*Bread {
	if x != nil {
		return x.Breads
	}
	return nil
}

type BreadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Breads        *BreadList `protobuf:"bytes,3,opt,name=breads,proto3" json:"breads,omitempty"`
	BuyOrderUuid  string     `protobuf:"bytes,2,opt,name=buy_order_uuid,json=buyOrderUuid,proto3" json:"buy_order_uuid,omitempty"`
	MakeOrderUuid string     `protobuf:"bytes,4,opt,name=make_order_uuid,json=makeOrderUuid,proto3" json:"make_order_uuid,omitempty"`
}

func (x *BreadRequest) Reset() {
	*x = BreadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bread_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreadRequest) ProtoMessage() {}

func (x *BreadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bread_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreadRequest.ProtoReflect.Descriptor instead.
func (*BreadRequest) Descriptor() ([]byte, []int) {
	return file_proto_bread_proto_rawDescGZIP(), []int{7}
}

func (x *BreadRequest) GetBreads() *BreadList {
	if x != nil {
		return x.Breads
	}
	return nil
}

func (x *BreadRequest) GetBuyOrderUuid() string {
	if x != nil {
		return x.BuyOrderUuid
	}
	return ""
}

func (x *BreadRequest) GetMakeOrderUuid() string {
	if x != nil {
		return x.MakeOrderUuid
	}
	return ""
}

type BreadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message       string     `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Breads        *BreadList `protobuf:"bytes,3,opt,name=breads,proto3" json:"breads,omitempty"`
	Error         string     `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	BuyOrderId    int32      `protobuf:"varint,5,opt,name=buy_order_id,json=buyOrderId,proto3" json:"buy_order_id,omitempty"`
	MakeOrderId   int32      `protobuf:"varint,6,opt,name=make_order_id,json=makeOrderId,proto3" json:"make_order_id,omitempty"`
	BuyOrderUuid  string     `protobuf:"bytes,7,opt,name=buy_order_uuid,json=buyOrderUuid,proto3" json:"buy_order_uuid,omitempty"`
	MakeOrderUuid string     `protobuf:"bytes,8,opt,name=make_order_uuid,json=makeOrderUuid,proto3" json:"make_order_uuid,omitempty"`
}

func (x *BreadResponse) Reset() {
	*x = BreadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bread_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreadResponse) ProtoMessage() {}

func (x *BreadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bread_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreadResponse.ProtoReflect.Descriptor instead.
func (*BreadResponse) Descriptor() ([]byte, []int) {
	return file_proto_bread_proto_rawDescGZIP(), []int{8}
}

func (x *BreadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BreadResponse) GetBreads() *BreadList {
	if x != nil {
		return x.Breads
	}
	return nil
}

func (x *BreadResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *BreadResponse) GetBuyOrderId() int32 {
	if x != nil {
		return x.BuyOrderId
	}
	return 0
}

func (x *BreadResponse) GetMakeOrderId() int32 {
	if x != nil {
		return x.MakeOrderId
	}
	return 0
}

func (x *BreadResponse) GetBuyOrderUuid() string {
	if x != nil {
		return x.BuyOrderUuid
	}
	return ""
}

func (x *BreadResponse) GetMakeOrderUuid() string {
	if x != nil {
		return x.MakeOrderUuid
	}
	return ""
}

var File_proto_bread_proto protoreflect.FileDescriptor

var file_proto_bread_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x62, 0x72, 0x65, 0x61, 0x64, 0x22, 0xfd, 0x01, 0x0a, 0x05, 0x42,
	0x72, 0x65, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x3a, 0x0a, 0x08, 0x42, 0x75,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x0f, 0x42, 0x75, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x62, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72,
	0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x72, 0x65,
	0x61, 0x64, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3d,
	0x0a, 0x0c, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x09, 0x62, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x62, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x09, 0x62, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x3f, 0x0a,
	0x09, 0x4d, 0x61, 0x6b, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x72,
	0x65, 0x61, 0x64, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x62, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x22, 0x80,
	0x01, 0x0a, 0x10, 0x4d, 0x61, 0x6b, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x6b, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x6b, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x22, 0x31, 0x0a, 0x09, 0x42, 0x72, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x06, 0x62, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x62, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x52, 0x06, 0x62, 0x72,
	0x65, 0x61, 0x64, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x0c, 0x42, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x62, 0x72, 0x65, 0x61, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x42, 0x72,
	0x65, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x62, 0x72, 0x65, 0x61, 0x64, 0x73, 0x12,
	0x24, 0x0a, 0x0e, 0x62, 0x75, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6d, 0x61, 0x6b, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x22, 0xfd, 0x01,
	0x0a, 0x0d, 0x42, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x62, 0x72, 0x65,
	0x61, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x72, 0x65, 0x61,
	0x64, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x06, 0x62, 0x72, 0x65,
	0x61, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x75, 0x79,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x62, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6d,
	0x61, 0x6b, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x6d, 0x61, 0x6b, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x0e, 0x62, 0x75, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x61, 0x6b, 0x65, 0x5f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x6d, 0x61, 0x6b, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x32, 0xc9, 0x01,
	0x0a, 0x09, 0x4d, 0x61, 0x6b, 0x65, 0x42, 0x72, 0x65, 0x61, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x42,
	0x61, 0x6b, 0x65, 0x42, 0x72, 0x65, 0x61, 0x64, 0x12, 0x13, 0x2e, 0x62, 0x72, 0x65, 0x61, 0x64,
	0x2e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x62, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x11, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x72, 0x65,
	0x61, 0x64, 0x54, 0x6f, 0x42, 0x61, 0x6b, 0x65, 0x72, 0x79, 0x12, 0x13, 0x2e, 0x62, 0x72, 0x65,
	0x61, 0x64, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x62, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0f, 0x4d, 0x61, 0x64, 0x65, 0x42,
	0x72, 0x65, 0x61, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x13, 0x2e, 0x62, 0x72, 0x65,
	0x61, 0x64, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x62, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x32, 0xa0, 0x01, 0x0a, 0x0e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x42, 0x0a, 0x13,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x13, 0x2e, 0x62, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x42, 0x72, 0x65, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x72, 0x65, 0x61, 0x64,
	0x2e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4a, 0x0a, 0x19, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x13, 0x2e,
	0x62, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x32, 0x84, 0x01, 0x0a,
	0x08, 0x42, 0x75, 0x79, 0x42, 0x72, 0x65, 0x61, 0x64, 0x12, 0x37, 0x0a, 0x08, 0x42, 0x75, 0x79,
	0x42, 0x72, 0x65, 0x61, 0x64, 0x12, 0x13, 0x2e, 0x62, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x42, 0x72,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x72, 0x65,
	0x61, 0x64, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0e, 0x42, 0x75, 0x79, 0x42, 0x72, 0x65, 0x61, 0x64, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x13, 0x2e, 0x62, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x42, 0x72, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x72, 0x65, 0x61,
	0x64, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x30, 0x01, 0x32, 0x90, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x6c,
	0x64, 0x42, 0x72, 0x65, 0x61, 0x64, 0x12, 0x3a, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x42, 0x72, 0x65, 0x61, 0x64, 0x12, 0x13, 0x2e, 0x62, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x42, 0x72,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x72, 0x65,
	0x61, 0x64, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x72, 0x65, 0x61,
	0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x13, 0x2e, 0x62, 0x72, 0x65, 0x61, 0x64, 0x2e,
	0x42, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62,
	0x72, 0x65, 0x61, 0x64, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x61, 0x6c, 0x76, 0x61, 0x72, 0x61, 0x64, 0x6f, 0x32, 0x30,
	0x30, 0x34, 0x2f, 0x62, 0x61, 0x6b, 0x65, 0x72, 0x79, 0x2d, 0x67, 0x6f, 0x2f, 0x62, 0x72, 0x65,
	0x61, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_bread_proto_rawDescOnce sync.Once
	file_proto_bread_proto_rawDescData = file_proto_bread_proto_rawDesc
)

func file_proto_bread_proto_rawDescGZIP() []byte {
	file_proto_bread_proto_rawDescOnce.Do(func() {
		file_proto_bread_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_bread_proto_rawDescData)
	})
	return file_proto_bread_proto_rawDescData
}

var file_proto_bread_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_bread_proto_goTypes = []interface{}{
	(*Bread)(nil),            // 0: bread.Bread
	(*BuyOrder)(nil),         // 1: bread.BuyOrder
	(*BuyOrderDetails)(nil),  // 2: bread.BuyOrderDetails
	(*BuyOrderList)(nil),     // 3: bread.BuyOrderList
	(*MakeOrder)(nil),        // 4: bread.MakeOrder
	(*MakeOrderDetails)(nil), // 5: bread.MakeOrderDetails
	(*BreadList)(nil),        // 6: bread.BreadList
	(*BreadRequest)(nil),     // 7: bread.BreadRequest
	(*BreadResponse)(nil),    // 8: bread.BreadResponse
}
var file_proto_bread_proto_depIdxs = []int32{
	1,  // 0: bread.BuyOrderList.buyOrders:type_name -> bread.BuyOrder
	0,  // 1: bread.BreadList.breads:type_name -> bread.Bread
	6,  // 2: bread.BreadRequest.breads:type_name -> bread.BreadList
	6,  // 3: bread.BreadResponse.breads:type_name -> bread.BreadList
	7,  // 4: bread.MakeBread.BakeBread:input_type -> bread.BreadRequest
	7,  // 5: bread.MakeBread.SendBreadToBakery:input_type -> bread.BreadRequest
	7,  // 6: bread.MakeBread.MadeBreadStream:input_type -> bread.BreadRequest
	7,  // 7: bread.CheckInventory.CheckBreadInventory:input_type -> bread.BreadRequest
	7,  // 8: bread.CheckInventory.CheckBreadInventoryStream:input_type -> bread.BreadRequest
	7,  // 9: bread.BuyBread.BuyBread:input_type -> bread.BreadRequest
	7,  // 10: bread.BuyBread.BuyBreadStream:input_type -> bread.BreadRequest
	7,  // 11: bread.RemoveOldBread.RemoveBread:input_type -> bread.BreadRequest
	7,  // 12: bread.RemoveOldBread.RemoveBreadStream:input_type -> bread.BreadRequest
	8,  // 13: bread.MakeBread.BakeBread:output_type -> bread.BreadResponse
	8,  // 14: bread.MakeBread.SendBreadToBakery:output_type -> bread.BreadResponse
	8,  // 15: bread.MakeBread.MadeBreadStream:output_type -> bread.BreadResponse
	8,  // 16: bread.CheckInventory.CheckBreadInventory:output_type -> bread.BreadResponse
	8,  // 17: bread.CheckInventory.CheckBreadInventoryStream:output_type -> bread.BreadResponse
	8,  // 18: bread.BuyBread.BuyBread:output_type -> bread.BreadResponse
	8,  // 19: bread.BuyBread.BuyBreadStream:output_type -> bread.BreadResponse
	8,  // 20: bread.RemoveOldBread.RemoveBread:output_type -> bread.BreadResponse
	8,  // 21: bread.RemoveOldBread.RemoveBreadStream:output_type -> bread.BreadResponse
	13, // [13:22] is the sub-list for method output_type
	4,  // [4:13] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_proto_bread_proto_init() }
func file_proto_bread_proto_init() {
	if File_proto_bread_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_bread_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bread); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bread_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bread_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyOrderDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bread_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyOrderList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bread_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bread_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakeOrderDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bread_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreadList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bread_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bread_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_bread_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   4,
		},
		GoTypes:           file_proto_bread_proto_goTypes,
		DependencyIndexes: file_proto_bread_proto_depIdxs,
		MessageInfos:      file_proto_bread_proto_msgTypes,
	}.Build()
	File_proto_bread_proto = out.File
	file_proto_bread_proto_rawDesc = nil
	file_proto_bread_proto_goTypes = nil
	file_proto_bread_proto_depIdxs = nil
}
